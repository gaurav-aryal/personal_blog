---
interface Props {
    title: string;
    description: string;
    image: string;
    url: string;
    large?: boolean;
}

const { title, description, image, url, large = false } = Astro.props;
console.log(`ProjectCard: URL for ${title} is ${url}`);
---

<div class={`project-card ${large ? 'large' : ''}`}>
    <a href={url} class="block h-full">
        <div class="bg-gradient-to-br from-[#0f172a] to-[#1e293b] rounded-xl overflow-hidden h-full border border-blue-900/20 hover:border-blue-500 transition duration-300 backdrop-filter backdrop-blur-lg shadow-lg">
            <div class="bg-white/5 p-4 flex justify-center items-center h-40">
                <img 
                    src="/project-logo.svg"
                    alt="Project Logo"
                    class="w-16 h-16"
                />
            </div>
            <div class="p-6">
                <h3 class="font-bold text-xl mb-2 text-blue-400">{title}</h3>
                <p class="text-gray-400 mb-4 line-clamp-2">{description}</p>
                <span class="text-blue-400 hover:text-blue-300 inline-flex items-center">
                    Read more 
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </span>
            </div>
        </div>
    </a>
</div>

<style>
    .project-card {
        transition: all 0.3s ease;
    }
    
    .project-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 20px rgba(59, 130, 246, 0.2);
    }
    
    .project-card.large img {
        height: 16rem;
    }
</style> 